; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "git-vrc"
#define MyAppVersion "0.1.0"
#define MyAppPublisher "anatawa12"
#define MyAppURL "https://github.com/anatawa12/git-vrc"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{990D9E28-C7CB-4770-8CEF-20D2191219AB}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
LicenseFile=LICENSE-MIT
; Uncomment the following line to run in non administrative install mode (install for current user only).
;PrivilegesRequired=lowest
PrivilegesRequiredOverridesAllowed=dialog
OutputBaseFilename=vrc-get-setup
SolidCompression=yes
WizardStyle=modern
; x64 install mode
ArchitecturesAllowed=x64compatible
ArchitecturesInstallIn64BitMode=x64compatible
; we don't need restart
RestartIfNeededByRun=no
; disable warn for user areas since we're checking for user / system install with IsAdminInstallMode
UsedUserAreasWarning=no

; add to PATH variable
[Registry]
Root: HKLM; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; \
    ValueType: expandsz; ValueName: "Path"; ValueData: "{olddata};{app}"; \
    Check: IsAdminInstallMode     and NeedsAddPathSystem(ExpandConstant('{app}'))
Root: HKCU;  Subkey: "Environment"; \
    ValueType: expandsz; ValueName: "Path"; ValueData: "{olddata};{app}"; \
    Check: not IsAdminInstallMode and NeedsAddPathUser(ExpandConstant('{app}'))

[Run]
FileName: "{app}/git-vrc.exe"; Parameters: "install --config --system"; Check: IsAdminInstallMode
FileName: "{app}/git-vrc.exe"; Parameters: "install --config --global"; Check: not IsAdminInstallMode

[UninstallRun]
FileName: "{app}/git-vrc.exe"; Parameters: "uninstall --config --system"; Check: IsAdminInstallMode;     RunOnceId: "com.anatawa12.git-vrc.system"
FileName: "{app}/git-vrc.exe"; Parameters: "uninstall --config --global"; Check: not IsAdminInstallMode; RunOnceId: "com.anatawa12.git-vrc.local"

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "japanese"; MessagesFile: "compiler:Languages\Japanese.isl"

[Files]
Source: "target\release\git-vrc.exe"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Code]

function NeedsAddPath(const RootKey: Integer; const SubKey: string; const Key: string; const FindValue: string): boolean;
var
  ExistingValue: string;
begin
  if not RegQueryStringValue(RootKey, SubKey, Key, ExistingValue)
  then begin
    Result := True;
    exit;
  end;
  { look for the path with leading and trailing semicolon }
  { Pos() returns 0 if not found }
  Result := Pos(';' + FindValue + ';', ';' + ExistingValue + ';') = 0;
end;

function NeedsAddPathSystem(const FindValue: string): boolean;
begin
  Result := NeedsAddPath(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment', 'Path', FindValue);
end;

function NeedsAddPathUser(const FindValue: string): boolean;
begin
  Result := NeedsAddPath(HKEY_CURRENT_USER, 'Environment', 'Path', FindValue);
end;
